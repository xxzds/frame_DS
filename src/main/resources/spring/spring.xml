<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.1.xsd
			">

	<!--引入配置属性文件 -->
<!-- 	<context:property-placeholder location="classpath:config.properties,			 -->
<!-- 											classpath:mail.properties, -->
<!-- 											classpath:redis/redis.properties -->
<!-- 											" -->
<!-- 											file-encoding="UTF-8"/>   -->
											
	<!-- 同上 -->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations" >
	        <list>
		        <value>classpath:config.properties</value>
		        <value>classpath:mail.properties</value>
		        <value>classpath:redis/redis.properties</value>
		         <value>classpath:jms/jms.properties</value>
	        </list>       
        </property>
        <property name="fileEncoding" value="UTF-8" />
    </bean>
     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties" />
    </bean>
    
    
    <bean class="com.anjz.listener.ApplicationListenerTest"></bean>

	<!--自动扫描含有@Service将其注入为bean -->
	<context:component-scan base-package="com.anjz.core.service" />	
	
	<!-- spring工具类 方便在非spring管理环境中获取bean -->
	<bean class="com.anjz.spring.SpringUtils"/>
	
	
	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->
                <value>classpath:messages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>
    
    <!-- 以下 validator  conversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    
     <!-- 类型转换及数据格式化 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>
    
    <!-- 配置线程池 -->  
	<bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >  
	    <!-- 线程池维护线程的最少数量 -->  
		<property name ="corePoolSize" value ="5" />  
	    <!-- 线程池维护线程所允许的空闲时间 -->  
		<property name ="keepAliveSeconds" value ="30000" />  
	    <!-- 线程池维护线程的最大数量 -->  
		<property name ="maxPoolSize" value ="1000" />  
	    <!-- 线程池所使用的缓冲队列 -->  
		<property name ="queueCapacity" value ="200" />  
	</bean>
	
		
	<!-- mybatis,数据库，事务的配置 -->
	<import resource="classpath:spring/spring-mybatis.xml" />
	
	<!-- aop -->
	<import resource="classpath:spring/spring-service-aop.xml" />
	
	<!-- ehcache -->
	<import resource="classpath:cache/cache-config.xml" />
	
	<!-- redis -->
<!-- 	<import resource="classpath:redis/redis-config.xml"/> -->
	
	<!-- shiro -->
	<import resource="classpath:spring/spring-shiro.xml"/>
	
	<!-- 定时任务 -->
<!-- 	<import resource="classpath:spring/spring-service-job.xml" /> -->

	<!--  组件服务 -->
	<import resource="classpath:spring/spring-service-component.xml" />
</beans>