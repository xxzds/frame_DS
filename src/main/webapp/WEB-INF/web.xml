<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">

	<display-name>frame_DS</display-name>

	<!-- org.springframework.web.context.ContextLoader -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:spring/spring.xml
		</param-value>
		
		<!-- 设置全局变量，如果加载bean时，出现id相同的bean，会抛出异常 -->
<!-- 		<param-name>contextInitializerClasses</param-name>   -->
<!--         <param-value>com.anjz.spring.SpringApplicationContextInitializer</param-value> -->
	</context-param>
	
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 防止spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	 <!-- 
	 可以使用RequestContextHolder.currentRequestAttributes() 获取到请求的attr 
	 HttpServletRequest request = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest();
	 -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

	<!-- 编码格式 拦截器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<!-- Async support must be enabled on a servlet and for all filters involved in async request processing. 
		This is done in Java code using the Servlet API or by adding "<async-supported>true</async-supported>" 
		to servlet and filter declarations in web.xml -->
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<!--druid监控过滤器  -->
	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 拦截器，获取请求地址 -->
	<filter>
		<filter-name>getRequestUrl</filter-name>
		<filter-class>com.anjz.filter.RequestURLFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
		<filter-name>getRequestUrl</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- shiro 安全过滤器 -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    
    
    <!-- 验证码过滤器需要放到Shiro之后 因为Shiro将包装HttpSession 如果不 可能造成两次的sesison id 不一样 -->
    <filter>
        <filter-name>JCaptchaFilter</filter-name>
        <filter-class>com.anjz.base.jcaptcha.JCaptchaFilter</filter-class>
        <async-supported>true</async-supported>
    </filter>
    <filter-mapping>
        <filter-name>JCaptchaFilter</filter-name>
        <url-pattern>/jcaptcha.jpg</url-pattern>
    </filter-mapping>	
	
	<!-- druid servlet -->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>
	
	<!-- springmvc servlet -->
	<servlet>
		<description>spring mvc servlet</description>
		<servlet-name>springMvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				classpath:spring/spring-mvc.xml
			</param-value>
		</init-param>
		
		<!-- 设置全局变量，如果加载bean时，出现id相同的bean，会抛出异常 -->
<!-- 		<init-param>　   -->
<!-- 		  <param-name>contextInitializerClasses</param-name>   -->
<!-- 		  <param-value>com.anjz.spring.SpringApplicationContextInitializer</param-value> -->
<!-- 		</init-param>   -->
		<load-on-startup>1</load-on-startup>
		<!-- 支持异步请求 -->
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>springMvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 配置session超时时间，单位分钟 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<!-- 默认页面 -->
	 <!-- <welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list> -->

	<!-- 错误处理 -->
	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>
	
	<error-page>
		<error-code>500</error-code>
		<location>/500.jsp</location>
	</error-page>
	
	<error-page>  
	    <exception-type>java.lang.Throwable</exception-type>  
	    <location>/500.jsp</location>  
	</error-page> 
</web-app>